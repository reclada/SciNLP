stages:
  - prepare
  - db
  - runtime
  - test
  - deploy
  - clean
  - clean_db
  - autotest

prepare_scinlp:
  stage: prepare
  image: bitnami/git
  script:
    - echo "REPO_URL=588200329560.dkr.ecr.eu-west-1.amazonaws.com" >> prepare.env
    - echo LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`) >> prepare.env
    - echo IMAGE_TAG=$CI_JOB_ID >> prepare.env
    - echo ENV=$(echo $CI_COMMIT_REF_NAME | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]') >> prepare.env
    - export ENV=$(echo $CI_COMMIT_REF_NAME | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]') >> prepare.env
    - echo NAMESPACE = reclada-$ENV >> prepare.env
  artifacts:
    reports:
      dotenv: prepare.env
  rules:
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ && $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_COMMIT_MESSAGE !~ /^delenv/
      when: always
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ && $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test" && $CI_COMMIT_MESSAGE !~ /^delenv/
      when: always
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^dynamic/ 
      when: always
    - if: $CI_COMMIT_REF_NAME == "main"
      when: always
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never
  tags:
    - k8s-devops


prepare_db:
  stage: db
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/curljq:01
  script:
    - curl --version
    - jq --version
    - echo $DB_REPO_TOKEN
    - echo $CI_COMMIT_REF_NAME
    #Create db with the same name prefix as current branch 
    - curl --request POST --header "PRIVATE-TOKEN:$DB_REPO_TOKEN" "https://gitlab.reclada.com/api/v4/projects/34/repository/branches?branch=$CI_COMMIT_REF_NAME&ref=test" | jq
  needs:
    - job: prepare_scinlp
      artifacts: true
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ && $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: never
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ && $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
      when: never
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^dynamic/ && $CI_COMMIT_MESSAGE !~ /^delenv/ && $CI_MERGE_REQUEST_ID !~ /^./ 
      when: always
    - if: $CI_COMMIT_REF_NAME == "main"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never
  tags:
    - k8s-devops

prepare_runtime:
  stage: runtime
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/curljq:01
  script:
    - curl --version
    - jq --version
    - echo $RUNTIME_REPO_TOKEN
    - echo $CI_COMMIT_REF_NAME
    #Create db with the same name prefix as current branch
    - curl --request POST --header "PRIVATE-TOKEN:$RUNTIME_REPO_TOKEN" "https://gitlab.reclada.com/api/v4/projects/36/repository/branches?branch=$CI_COMMIT_REF_NAME&ref=test" | jq
    # Check pipeline sussess for current branch in runtime repository
    - sleep 90
  needs:
    - job: prepare_db
    - job: prepare_scinlp
      artifacts: true
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^delenv/
      when: never
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ && $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: never
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ && $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
      when: never
    - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^dynamic/ && $CI_COMMIT_MESSAGE !~ /^delenv/ && $CI_MERGE_REQUEST_ID !~ /^./ 
      when: always
    - if: $CI_COMMIT_REF_NAME == "main"
      when: never
    - if: $CI_COMMIT_REF_NAME == "test"
      when: never
  tags:
    - k8s-devops

test-dynamic-env:
  stage: test
  # image: ???
  script:
    - echo "Run some test before deploy to dynamic env"
  needs:
    - job: prepare_scinlp
      artifacts: true
  tags:
    - k8s-devops
  rules:
  - if: $CI_COMMIT_MESSAGE =~ /^delenv/
    when: never
  - if: $CI_MERGE_REQUEST_ID =~ /^./ 
    when: never
  - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
    when: never
  - if: $CI_COMMIT_REF_NAME =~ /^dynamic/ && $CI_COMMIT_MESSAGE !~ /^delenv/
    when: always
  - if: $CI_COMMIT_REF_NAME == "main"
    when: never
  - if: $CI_COMMIT_REF_NAME == "test"
    when: never

k8s-dynamic-env:
  stage: deploy
  image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/helm-kubectl:v1.0.0-0
  script:
    - echo "Copy Scinlp to efs"

    - git clone -b $CI_COMMIT_REF_NAME https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.reclada.com/developers/SciNLP.git
    - kubectl cp ./SciNLP/ $NAMESPACE/$(kubectl get pods -n $NAMESPACE | grep sshfs | awk '{print $1}'):/repos --no-preserve=true
  needs:
    - job: prepare_db
    - job: prepare_runtime
    - job: test-dynamic-env
    - job: prepare_scinlp
      artifacts: true
  tags:
    - k8s-devops
  rules:
  - if: $CI_COMMIT_MESSAGE =~ /^delenv/
    when: never
  - if: $CI_MERGE_REQUEST_ID =~ /^./ 
    when: never
  - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
    when: never
  - if: $CI_COMMIT_REF_NAME =~ /^dynamic/
    when: always
  - if: $CI_COMMIT_REF_NAME == "main"
    when: never
  - if: $CI_COMMIT_REF_NAME == "test"
    when: never


# delete-k8s-dynamic-env:
#   stage: clean
#   image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/helm-kubectl:v1.0.0-0
#   script:
#     - echo "Uninstall helm charts and k8s namespcase"
#     - helm uninstall webui -n $NAMESPACE || true
#     - helm uninstall postgrest -n $NAMESPACE || true
#     - helm uninstall sshfs -n $NAMESPACE
#     - helm uninstall coordinator -n $NAMESPACE
#     - kubectl delete ns $NAMESPACE
#   needs:
#     - job: prepare_scinlp
#       artifacts: true
#   rules:
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME =~ /^dynamic/ && $CI_COMMIT_MESSAGE =~ /^delenv/ && $CI_MERGE_REQUEST_ID !~ /^./
#       when: always
#     - if: $CI_COMMIT_REF_NAME == "main"
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "test"
#       when: never
#   tags:
#     - k8s-devops


# delete-db-dynamic-env:
#   stage: clean_db
#   image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/db-installer:0.1
#   script:
#     - echo "Uninstall db"
#     - echo $CI_COMMIT_MESSAGE
#     - psql -h dev-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com -p 5432 -U reclada -d postgres -c "DROP DATABASE $ENV_reclada_k8s;"
#   needs:
#     - job: delete-terraform-dynamic-env
#     - job: delete-k8s-dynamic-env
#     - job: prepare_scinlp
#       artifacts: true
#   rules:
#     # - if: $CI_COMMIT_MESSAGE =~ /^delenv/
#     #   when: always
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME =~ /^dynamic/ && $CI_COMMIT_MESSAGE =~ /^delenv/
#       when: always
#     - if: $CI_COMMIT_REF_NAME == "main"
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "test"
#       when: never
#   tags:
#     - k8s-devops


# deploy-autotest-env:
#   stage: deploy
#   image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/helm-kubectl:v1.0.0-0
#   script:
#     - echo "Run update database in autotest env"

#     - cd $CI_PROJECT_DIR/devops/helm-charts/$COORDINATOR_RELEASE_NAME && helm upgrade --install --debug --wait --timeout 600s --create-namespace -n reclada-autotest -f values.yaml -f vars/autotest.yaml --set image.tag=$IMAGE_TAG coordinator .
    
#     - echo "*******"
    
#     - helm upgrade --install --debug --wait --timeout 600s --create-namespace -n reclada-autotest -f $CI_PROJECT_DIR/devops/helm-charts/$SSHFS_RELEASE_NAME/values.yaml -f $CI_PROJECT_DIR/devops/helm-charts/$SSHFS_RELEASE_NAME/vars/autotest.yaml --set image.tag=0.1 $SSHFS_RELEASE_NAME $CI_PROJECT_DIR/devops/helm-charts/$SSHFS_RELEASE_NAME/

#     - echo "*******"

#     - echo "git clone at this place"
#     - cd $CI_PROJECT_DIR/

#     - git clone -b $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.reclada.com/developers/SciNLP.git
#     - kubectl cp ./SciNLP/ reclada-autotest/$(kubectl get pods -n reclada-autotest | grep sshfs | awk '{print $1}'):/repos --no-preserve=true
    
#   needs:
#     - job: build_scinlp
#     - job: prepare_scinlp
#       artifacts: true
#   tags:
#       - k8s-devops
#   rules:
#     - if: $CI_COMMIT_MESSAGE =~ /^delenv/
#       when: never
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
#       when: always
#     - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME =~ /^dynamic/
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "main"
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "test"
#       when: never


# test-autotest-env:
#   stage: autotest
#   # image: ???
#   script:
#     - echo "Run some tests for autotest env"

#   needs:
#     - job: deploy-autotest-env
#     - job: terraform-autotest-env
#   tags:
#       - k8s-devops
#   rules:
#     - if: $CI_COMMIT_MESSAGE =~ /^delenv/
#       when: never
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
#       when: always
#     - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME =~ /^dynamic/
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "main"
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "test"
#       when: never
    

# deploy-prod-env:
#   stage: deploy
#   script:
#     - echo "Run update database in prod env"

#     - echo "git clone at this place"
#     - cd $CI_PROJECT_DIR/

#     - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.reclada.com/developers/SciNLP.git
#     - kubectl cp ./SciNLP/ reclada-prod/$(kubectl get pods -n reclada-prod | grep sshfs | awk '{print $1}'):/repos --no-preserve=true
  
#   needs:
#     - job: build_scinlp
#     - job: prepare_scinlp
#       artifacts: true
#   tags:
#       - k8s-devops
#   rules:
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
#       when: never
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
#       when: never
#     - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME =~ /^dynamic/
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "main"
#       when: always
#     - if: $CI_COMMIT_REF_NAME == "test"
#       when: never

# terraform-prod-env:
#   stage: deploy
#   image: 588200329560.dkr.ecr.eu-west-1.amazonaws.com/aws-build:v1.0.0-0
#   script:
#     - echo "Run update lamda/s3 in prod env"
#     - cd $CI_PROJECT_DIR/devops/terraform/
#     - sed -i "s|PGPASSWORD|$PG_PASSWORD|g" $CI_PROJECT_DIR/devops/terraform/variables.tf
#     - sed -i "s|ENVPREFIX|prod|g" $CI_PROJECT_DIR/devops/terraform/variables.tf
#     - sed -i "s|RDSINSTANCE|prod-reclada-k8s.c9lpgtggzz0d.eu-west-1.rds.amazonaws.com|g" $CI_PROJECT_DIR/devops/terraform/variables.tf
#     - cat $CI_PROJECT_DIR/devops/terraform/variables.tf
#     - ./terraform init
#     - ./terraform workspace list
#     - ./terraform workspace select prod || ./terraform workspace new prod
#     - ./terraform workspace list
#     - ./terraform apply -target=module.lambda_function -auto-approve
#     - ./terraform apply -target=aws_iam_role.iam_for_lambda -auto-approve
#     - ./terraform apply -target=aws_lambda_function.s3_create_datasource_in_db -auto-approve
#     - ./terraform apply -target=aws_s3_bucket.bucket -auto-approve
#     - ./terraform apply -target=aws_s3_bucket_policy.AllowPublicRead -auto-approve
#     - ./terraform apply -target=aws_s3_bucket_object.inbox_folder -auto-approve
#     - ./terraform apply -target=aws_s3_bucket_object.output_folder -auto-approve
#     - ./terraform apply -target=aws_lambda_permission.allow_bucket -auto-approve
#     - ./terraform apply -target=aws_s3_bucket_notification.bucket_notification -auto-approve
  
#   needs:
#     - job: build_scinlp
#     - job: prepare_scinlp
#       artifacts: true
#   tags:
#       - k8s-devops
#   rules:
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"
#       when: never
#     - if: $CI_MERGE_REQUEST_ID =~ /^./ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
#       when: never
#     - if: $CI_COMMIT_REF_NAME !~ /^dynamic/ 
#       when: never
#     - if: $CI_COMMIT_REF_NAME =~ /^dynamic/
#       when: never
#     - if: $CI_COMMIT_REF_NAME == "main"
#       when: always
#     - if: $CI_COMMIT_REF_NAME == "test"
#       when: never
